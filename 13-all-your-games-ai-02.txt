##All Your Games are Belong to Us Pt 2##

AlphaGo - go (was considered the toughest to win - https://www.explainxkcd.com/wiki/index.php/1002:_Game_AIs)
  - as recently as 1 year ago, computer experts thoguht we were still 10 year away from building a computer that could defeat GO champions
  - best algos could easily be beaten by moderately good players
Why so tough to beat?
  - There are games (like tic-tac-toe) that have a finite number of possible moves.  These games generally have mathematical solutions and are considered 'solved'
  - Chess had too many potential games for it to be a 'solved' game but some pieces were more valuable than others so it could choose the best 2-3 moves and play out possible games for those moves (then select the best overall move)
  - Go had more possible game combos than there are atoms in the known universe AND all pieces had the same value so it couldn't be 'won' in that way
How did we solve it?
  - Combination of 'deep learning' and 'monte carlo tree search'
  - Deep Learning
    - Give computer basic rules of a game and have it play over and over and over while it abstracts out strategies and best practices
    - Seeded with a number of base games (30 million?)
    - Played against a modified version of itself that had been trained to make the most likely human moves
Monte Carlo Tree Search

=========
Computers winning at chess...What once had seemed an impossible feat of artificial intelligence had become an every day example of the power of brute force computing power. By now, humans (like you...and me too) were quite used to losing games to computer opponents.  Just like that time I tried to beat Greece in Diety mode....alright, King mode (I'm not that great).  But humanity, crafty devils that we are, has long had a secret weapon - GO.  And it was just a matter of time before computers came for that too.

[INTRO]

// These lines have been funny when they're semi-non-sequiturs that actually relate in some odd way. These aren't doing that for me right now.

/ Welcome to CompChomp...the only show on the internets where you can talk about atari without having to mention video game crashes.
/ Welcome to CompChomp...the only show on the internets where Atari won't put any of your pieces in jeopardy.
/ Welcome to CompChomp...the only show on the internets where artificial intelligence and the Tokugawa Shogunate intersect.
/ Welcome to CompChomp...the only show on the internets where a trip to Monte Carlo is a legitimate business expense.


From the beginning of AI work, GO was considered the impossible dream.  There were games like tic-tac-toe (naughts and crosses for my British friends) that had a small, finite number of possibilities.  Those games could be entirely solved with math - and, if you can solve it with math you don't stand a chance against a computer.  

Chess was tougher as there were too many possible games for it to have a complete mathematical solution.  However, certain pieces, like their majesties the king and queen, are more valuable than others.  This allowed the AI to choose a few moves that favored those pieces, play out the possible results from making those moves and select the single best move. As commputing power improved (allowing the computer to test out more possible moves), this method eventually made computers unstoppable at chess.

Go is different though. You play it by placing a stone on a 19 x 19 grid with a goal of surrounding more territory than your opponent.  There are more possible game combinations than there are atoms in the known universe AND every piece has exactly the same value so the chess approach won't work. As recently as 2015, experts in AI were predicting that we were about 10 years away from having a computer that could defeat a top human Go player.

Then, in January of 2016, a paper was published in the journal Nature detailing the algorithms that had been used by an AI to beat the current European Go champion Fan Hui. And, oh yeah, they'd be matching their computer - AlphaGo - up against Lee Sodol, one of the world's top players in March. Mic drop.

#####
- game 2 off to normal start, trading movies, battling for territory
  - move 37, piece is plunked down, far side of the board, everyone gasps
    - not a move a skilled player would make, ctrl rm readout 1:10,000
    - not one of 30,000,000 seed moves, was it a mistake?
    - Lee Sodol leaves, takes 20 minutes to move, he's shaken, loses soon after
- Game 4, Lee Sodol makes an uncommon move, splitting AlphaGo's terrirtory in half
  - computer is thrown off, loses, score 1 for humanity
- ends 4 to 1
  - Lee & Fan are both better players after playing AlphaGo
- May seem frivolous to wrory about games
  - applications for this tech in science, comps crunch data, intuit new patterns for humans to check into
#####


// This is getting fun, but doesn't feel as tight as the last story did. What's the difference between the two?

What changed between the experts making their predictions and the computers showing us up?  Advancements in machine learning!  

// I could use more time on this. I think this is where your channel could shine. Here's a two-piece setup-knockdown you're missing: uh oh, person vs computer... and... person barely loses (?) / gets smashed (?), then another matchup... and... smashed again (?) ... then... again ?!? WHAT'S GOING ON? We peel back the layers and start looking inside. You lead us to discover it's doing this thing. Which is cool. But that's not even the cool part. That's what other not-so-skilled comps are doing. But then there's this other little piece, and what's it doing? This other cool thing. Lead us to understand that. And that's not all! This OTHER really cool thing. Then we go back outside of the computer's head, and we're seeing it from the computer's perspective. And we see humans in trouble. UNTIL the human walks away from table to mow lawn / busts out another game. Domain specific. Is domain general the pot of gold at the end of the rainbow? When's that coming out? What will that beat us at? All the things?!?


Since GO has so many possible moves during each turn (remember the whole more atoms than the universe thing) GO computers can't search through every  move to determine the best one.  Instead, they use an algorithm called Monte Carlo Tree Search.  The computers take a random sample of the possible moves, check out the likely outcomes for each of those moves, then choose the best option from that sample.  AlphaGo is no different than other not-so-skilled GO playing computers on this front.

// Ah, looks like you're still building this out?

Where AlphaGo shines
  - neural networks help prune options during MCTS
  - neural networks are improved by playing against each other (seeded with 30 million human games, played countless additional games against each other)

  Is time to fear our robot overlords? Not-so-much. GO is still a fixed domain with a defined goal. Ask AlphaGo to play chess and it will probably do worse than my kid sister.  Maybe not...I haven't got a kid sister.

  CHOMP!
