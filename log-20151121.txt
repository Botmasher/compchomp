SCRIPT IDEAS

:Plan: one more script about language (Unihan / Google Translate / YT subtitles / Computational linguistics) for five total NativLang-CompChomp collabs. One more non-language scripts for CompChomp alone (Y10K).

phone evolution: protocol stuff - dial tone and what it means, telecom hacking/phone phreaking, Captain Crunch whistle

why do YouTube autogen subtitles get things so wrong? Voice recognition.

there was a nasty floating point bug in Pentium processors in the mid 90s: https://en.wikipedia.org/wiki/Pentium_FDIV_bug

Self-Driving Cars

Ada Lovelace

Top 10 deceptive tactics used by game programmers - How developers tricked the masses
http://www.gamasutra.com/view/feature/194772/dirty_game_development_tricks.php

Nintendo Iwata Balloon Fight mvmt calculations so useful used in Mario water lvls

NLP / Computational linguistics
mapping the search for linguistic universals: wals.info
predicting future language: http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0033171

What is a programming language? - expanding the cookie-baking metaphor

Han Unicode
- Japan protesting the way Chinese characters are organized on computers. Why?
- When writing went digital, it had to find a way to be calculated. That’s what a computer does. It counts.
- The counts here are bits. Pieces of information. Do this by encoding characters.
- Encoding in ASCII by binary integers. Walk through how works.
- Extending characters, and the ISO standard
- And then Unicode, to move beyond those limits.
- Unicode’s aim. Various character sets. All the languages and writing systems. Including ancient ones.
 How to do this for Chinese characters? 
- Complexity of Chinese. Worth getting into why so complex, but Josh and I already started thinking through that in Thoth’s Pill (wink nudge)
- Multiple countries using Chinese characters throughout history at core of their writing systems leading to different standards and forms.
- Unihan organizes these by putting them together, seeing variants of a character in different countries and periods as surface forms of the same grapheme.
- Problems. Logistic. Nationalistic/linguistic identity.
- How resolved? But what about exact technical details? What are Unicode chars?
- Computers can’t solve border disputes and decide linguistic identity for us.
	- Bringing us together after threads of history take us in different directions.
	- But maybe the linguistic conflicts that stem from those need info from language to resolve and encoding has to respond to linguistic facts

IBM Watson
- Ask a stupid question, get a stupid answer?
- Unlike Translate last week, this isn’t comparing texts to find a pattern. It’s not trying to learn how you speak to be able to imitate you, to replace humans. Watson is seeking to consider a question you ask, consider it, and come up with its own answer.
- Team and implementation focused on the things/tasks humans do more than doing a task regardless of the way humans would do it. In this way, it is seeking to understand, or, if you’re cynical, “simulate understanding”.
- The core of this is still Natural Language Processing. Like a champ in that field should, notices that simplistic ways of understanding language didn’t cut it. It uses memory and huge, complex associations to make best guesses at answers to questions.
- A word on Jeopardy performance. Maybe this should be the intro?
- Watson and nurses
- Treating language as mode of communication, so not just important understand in own right, but must also understand to accomplish a task. Measurable goals. Not just against speakers and their intuitions, like general public feels about translation software bar. But what it can do with language.
- Leads to Searle, Chinese Room and Turing test. Are linguistic tests linked to how our minds work, and is there something irreplaceable about us that makes these machines fundamentally incapable of thinking?
	- true, fluent language use linked to consciousness
	- machines (in strong AI) can eventually think because thinking is essentially computation, so all aspects of braining language must be, too
	- but this attempt to refute it claims that we can imagine non-thinking AI that could fool us into thinking it can think
	- but is this what we’re all doing anyhow, just going through the motions of thinking, and not “being thinkers”? this is where language and computers intertwine and lead us down a philosophical rabbit hole, fast
- Watson won’t convince the doubters, but it has already introduced a generation of us to what it will be like to have language-proficient computer brains around helping each and every one of us out in the future.
- But what do you think? Will we be talking to machines just as much as humans? Will we know the difference? And will they be speaking just like us, or understanding us in a way that complement us?




PROJECT PITCH

Provide a 5-10 sentence overview of your concept(s) for your video/series. *

I love coding - computer programming changed my life! I want to show everyone how code touches our lives everyday. How self driving cars decide who lives and who dies in an accident; whether AI is already breeding super humans; how 90s game developers tricked computers into lighting a whole video game world even though computers were too slow to do it; why female developers are disappearing in the pack. NativLang is offering me the chance to take some of my topics and host a series for their audience of language lovers and linguistics buffs. I want to show and tell how linguistics gets coded in fascinating ways. How do web translators automatically know the difference between English and Dutch? Are computer languages real languages? Why isn’t the name of your favorite dessert a good password? How one woman learned to talk to machines before they could hear us. They’re gonna love it!


Does your video concept include any characters in STEM-related roles? (Science, Technology, Engineering and Math) - If so, you may be eligible for additional production resources in line with Google’s broader mission to depict inspiring characters in these fields. *

YES! I’m Jessica, the host, and I’m a programmer. I went from loving computers but thinking I missed the chance to build a career around them to becoming a real working developer. I’m even about to speak at a conference in Australia about building diverse tech teams. As this series progresses, the cool people who make our world as automated as it is today (like Ada Lovelace!) are fair game for our animations, image play or short skits.


Project Collaborators - Who do you plan to work with? What directors, writers, producers, etc. will you put on your team for this shoot? *

Women aren’t working in STEM fields, but seeing examples of other women doing something scary or challenging helps us conceive of it as something we can do. Right now, while there are some strong female creators making videos on YouTube, the majority of science and technology creators are men. This series is an opportunity to show a female developer front-and-center to inspire girls on two fronts - (1) girls can get creative about STEM fields on YouTube and (2) girls can have careers in science and technology. My plan is to use the series on NativLang as a springboard to launch my own channel with exactly that passion and those goals.

Jessica is the lungs and face, bringing the ideas and the zeal that this world is made of code. Josh is a fellow coder, and an animator and composer from NativLang. Jason is a CTO and coding maniac, acting as script consultant, problem solver and fact checker extraordinaire. I’m looking for hands and brains to make this series a real, polished production.


PHONE CONVERSATION WITH YOUTUBE

Overview
I want to make videos about coding, showing everyone how code touches our lives everyday. This series will take a fun look at the things we love and use, open them up and explore the code they’re made of.

NativLang is offering me a chance to test this idea with their audience of 10k fans of linguistics and human language. So, with that in mind, I have a short list of coding topics relevant to their audience.

Examples
0. Are computer languages real languages?
1. Han unicode, encoding complex characters and language standards.
2. Passwords
3. Translators - how they identify language
4. IBM Watson - computers answering questions in natural language
5. Ada Lovelace - figured out how to talk to computers before there were computers to talk to.

Goals
- interface with NativLang’s language-loving audience, fitting with the voice and tone of NativLang
- Tailor content to meet the interests of people with a passion for linguistics
	- e.g. computational linguistics will fascinate them, but Dykstra pathfinding will be less relevant
- springboard for creating a wider array of programming-focused content, starting my own channel

Focus
- people have an idea of what programming is and who does it
- code changed my life; I love it; affects all of us everyday
- highlight how code impacts life
- provide a different voice, a female voice, the voice of someone unsure she could switch careers but passionate about code for years

Difference / USP
- Existing high-engagement channels cover:
	- the science of tech: SciShow and SciShow Space
	- reviews: hardware, software, games and gadgets channels
	- the maker phenomenon
	- tutorials: the biggest format when it comes to programming on YouTube
	- topical but academic (for insiders): computerphile
- Existing high-engagement channels exploring other topics in a fun way (for outsiders):
	- VSauce, Extra Credits, CrashCourse
	- nothing of this caliber and in this niche yet exists for computation and coding
- I think there’s a gap, or intersection, where coding doesn’t yet have a place on YouTube:
	- engaging explanations that make intuitive sense
	- my voice as a working woman developer
	- fitting art and animation done by NativLang

Format
- host to camera
- currently drafting along the lines of a “birth of digital age” aesthetic, 1940’s
- final edit will use of graphics, animations and “image play” tied to the aesthetic, including sound effects and music
- we also have idea of integrating short skits/segments between early programmers and host, but this is becoming hard to fit into scripts without it feeling forced
- majority of filming focused on getting face time with host, setting up angles and lighting for animation/compositing, capturing very clean audio
- clean backgrounds that can integrate animation style
- right now preferring nice set or matte bg to green screen to streamline our post-production pipeline
